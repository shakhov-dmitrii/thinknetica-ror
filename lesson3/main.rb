require './Train'
require './Station'
require './Route'

# Станиция имеет название, которое указывается при ее создании
first_station = Station.new("Начальная")
last_station = Station.new("Последняя")

# Станция может принимать поезда (по одному за раз)
first_station_train = Train.new("777", "грузовой", 3)
first_station.receive_train(first_station_train)

# Может возвращать список всех поездов на станции, находящиеся в текущий момент
puts "Поезда на станции #{first_station.trains_list}"

# Может возвращать список поездов на станции по типу (см. ниже): кол-во грузовых, пассажирских
puts "Грузовые поезда на станции: #{first_station.trains_list_by_type("грузовой")}"
puts "Пассажирские поезда на станции: #{first_station.trains_list_by_type("пассажирский")}"

# Может отправлять поезда (по одному за раз, при этом, поезд удаляется из списка поездов, находящихся на станции).
first_station.send_train(first_station_train)
puts "Поезда на станции после отправления поезда: #{first_station.trains_list}"

# Маршрут имеет начальную и конечную станцию, а также список промежуточных станций. Начальная и конечная станции указываютсся при создании 
# маршрута, а промежуточные могут добавляться между ними.
my_route = Route.new(first_station, last_station)

# Может добавлять промежуточную станцию в список
my_route.add_station(Station.new("Промежуточная-1"))
tmp_station = Station.new("Промежуточная-2")
my_route.add_station(tmp_station)
# Может выводить список всех станций по-порядку от начальной до конечной
puts "Станции на маршруте: #{my_route.stations}"
# Может удалять промежуточную станцию из списка
my_route.delete_station(tmp_station)
puts "Станции на маршруте после изменения: #{my_route.stations}"

# Поезд имеет номер (произвольная строка) и тип (грузовой, пассажирский) и количество вагонов, эти данные указываются при создании 
# экземпляра класса
train1 = Train.new("340", "грузовой", 5)
train2 = Train.new("970", "пассажирский", 1)
# Может набирать скорость
train1.speed = 10
# Может возвращать текущую скорость
puts "Скорость поезда после ускорения: #{train1.speed}"
# Может тормозить (сбрасывать скорость до нуля)
train1.stop
puts "Скорость поезда после остановки: #{train1.speed}"
# Может возвращать количество вагонов
puts "Количество вагонов первого поезда: #{train1.carriages}"
# Может прицеплять/отцеплять вагоны (по одному вагону за операцию, метод просто увеличивает или уменьшает количество вагонов). 
# Прицепка/отцепка вагонов может осуществляться только если поезд не движется.
train1.speed = 10
train1.add_carriage
train1.remove_carriage
train1.stop
train1.add_carriage
puts "Количество вагонов первого поезда после добавления: #{train1.carriages}"
train1.remove_carriage
puts "Количество вагонов первого поезда после убавления: #{train1.carriages}"
# Может принимать маршрут следования (объект класса Route). 
train1.set_route(my_route)
train2.set_route(my_route)
# При назначении маршрута поезду, поезд автоматически помещается на первую станцию в маршруте.
puts "Поезда на станции после присваивания маршрута: #{first_station.trains_list}"

# Может перемещаться между станциями, указанными в маршруте. Перемещение возможно вперед и назад, но только на 1 станцию за раз.
train1.move_forward
train1.move_forward
train1.move_forward
train1.move_forward
train1.move_backward
# Возвращать предыдущую станцию, текущую, следующую, на основе маршрута
puts "Предыдущая станция: #{train1.show_stations("previous")}"
puts "Текущая станции: #{train1.show_stations("current")}"

puts "Следующая станция: #{train1.show_stations("next")}"
